cocos2d-x 环境配置
方法一
运行cocos2d-x-3.0/setup.py,通过引导配置
方法二
# Add environment variable NDK_ROOT for cocos2d-x
export NDK_ROOT=/Users/sunground-android/android/android-ndk-r9d
export PATH=$NDK_ROOT:$PATH

# Add environment variable ANDROID_SDK_ROOT for cocos2d-x
export ANDROID_SDK_ROOT=/Users/sunground-android/android/android-sdks
export PATH=${ANDROID_SDK_ROOT}/tools:$PATH
export PATH=${ANDROID_SDK_ROOT}/platform-tools:$PATH

# Add environment variable COCOS_CONSOLE_ROOT for cocos2d-x
export COCOS_CONSOLE_ROOT=/Users/sunground-android/cocos2d-x-3.0/tools/cocos2d-console/bin
export PATH=$COCOS_CONSOLE_ROOT:$PATH

# Add environment variable ANT_ROOT for cocos2d-x
export ANT_ROOT=/usr/bin
export PATH=$ANT_ROOT:$PATH

# Add environment variable QUICK_COCOS2DX_ROOT for cocos2d-x
export QUICK_COCOS2DX_ROOT=/Users/sunground-android/quick-cocos2d-x
export PATH=$QUICK_COCOS2DX_ROOT:$PATH

1.使用cocos_console，对cocos2d-x项目的新建，编译，运行

cocos new -l [cpp, lua, js] -p com.xincao.hero_defend -d . -t runtime hero_defend

cocos compile -s ./hero_defend -p android -m [release, debug]

cocos deploy -s ./hero_defend -p andoird -m release
Now this command only take effect when target platform is android. It will re-install the specified project to the android device or simulator.

cocos run -s ./hero_defend -p android -m release

2.通过，使用eclipse进行项目的打包
先导入android项目，/hero_defend/frameworks/runtime-src/proj.android
对android进行配置，java build path -> source -> link source, 选择cocos2d-x中platform->android->java->src